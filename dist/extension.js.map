{"version":3,"file":"extension.js","mappings":"swBAAA,kBACA,YAWA,oBAAyBA,GACvBA,EAAQC,cAAcC,KACpBC,EAAOC,UAAUC,2BAA2B,CAAC,aAAc,cAAe,CACxE,iBAAAC,CAAkBC,EAAUC,EAAUC,GACpC,MACMC,EADWH,EAASI,SACHD,MAAM,cAC7B,GAAa,MAATA,EACF,OAEF,MAAME,EAAaF,EAAM,GACnBG,EAAON,EAASO,QAAQP,EAASQ,uBAAuBP,IAE9D,IAAoC,GADvBD,EAASS,OAAOR,GAAUS,KAC9BC,QAAQ,eACf,OAAO,KAET,MAAMC,EAAUP,EAAa,QACvBQ,EAYd,SAAsBD,GACpB,MACME,EADUC,EAAGC,aAAaJ,EAAS,QACnBK,MAAM,MACtBJ,EAAsB,GAC5B,IAAK,IAAIK,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAK,CACrC,MAAME,EAAON,EAAMI,GACbf,EAAQiB,EAAKjB,MAAM,cACZ,MAATA,GAGJU,EAASlB,KAAK,CACZ0B,IAAKlB,EAAM,GACXmB,MAAOnB,EAAM,GACbiB,KAAMF,EACNjB,SAAUmB,EAAKT,QAAQR,EAAM,KAEjC,CACA,OAAOU,CACT,CA9ByBU,CAAaX,GAE9B,OADAY,QAAQC,IAAIZ,GACLA,EACJa,QAAQC,GAAYA,EAAQN,KAAOf,IACnCsB,KAAKD,GACG,IAAI/B,EAAOiC,SAASjC,EAAOkC,IAAIC,KAAKnB,GAAU,IAAIhB,EAAOoC,SAASL,EAAQP,KAAMO,EAAQ1B,YAErG,IAGN,EAuBA,wBAA8B,C,UC7D9BgC,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,K,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://env-parsing-for-nodejs/./src/extension.ts","webpack://env-parsing-for-nodejs/external commonjs \"vscode\"","webpack://env-parsing-for-nodejs/external node-commonjs \"fs\"","webpack://env-parsing-for-nodejs/webpack/bootstrap","webpack://env-parsing-for-nodejs/webpack/startup"],"sourcesContent":["import * as fs from \"fs\";\nimport * as vscode from \"vscode\";\n\ninterface EnvItem {\n  key: string;\n  value: string;\n  line: number;\n  position: number;\n}\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  context.subscriptions.push(\n    vscode.languages.registerDefinitionProvider([\"javascript\", \"typescript\"], {\n      provideDefinition(document, position, token) {\n        const fileName = document.fileName;\n        const match = fileName.match(/(\\S*)\\/src/);\n        if (match == null) {\n          return;\n        }\n        const projectDir = match[1];\n        const word = document.getText(document.getWordRangeAtPosition(position));\n        const line = document.lineAt(position).text;\n        if (line.indexOf(\"process.env\") == -1) {\n          return null;\n        }\n        const envPath = projectDir + \"/.env\";\n        const envItems = parseEnvFile(envPath);\n        console.log(envItems);\n        return envItems\n          .filter((envItem) => envItem.key == word)\n          .map((envItem) => {\n            return new vscode.Location(vscode.Uri.file(envPath), new vscode.Position(envItem.line, envItem.position));\n          });\n      },\n    })\n  );\n}\n\nfunction parseEnvFile(envPath: string): EnvItem[] {\n  const envFile = fs.readFileSync(envPath, \"utf8\");\n  const lines = envFile.split(\"\\n\");\n  const envItems: EnvItem[] = [];\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const match = line.match(/(.*?)=(.*)/);\n    if (match == null) {\n      continue;\n    }\n    envItems.push({\n      key: match[1],\n      value: match[2],\n      line: i,\n      position: line.indexOf(match[2]),\n    });\n  }\n  return envItems;\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["context","subscriptions","push","vscode","languages","registerDefinitionProvider","provideDefinition","document","position","token","match","fileName","projectDir","word","getText","getWordRangeAtPosition","lineAt","text","indexOf","envPath","envItems","lines","fs","readFileSync","split","i","length","line","key","value","parseEnvFile","console","log","filter","envItem","map","Location","Uri","file","Position","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}